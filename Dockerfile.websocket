# WebSocket Server Dockerfile
FROM php:8.2-cli-alpine

# Install system dependencies
RUN apk add --no-cache \
    curl \
    libzip-dev \
    oniguruma-dev \
    libxml2-dev \
    mysql-client \
    git \
    unzip

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql mysqli zip xml mbstring

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install ReactPHP dependencies
RUN composer global require react/socket react/http

# Set working directory
WORKDIR /var/www/html

# Copy application code
COPY . .

# Install dependencies
RUN composer install --no-dev --optimize-autoloader

# Create WebSocket server script
RUN echo '#!/usr/bin/env php' > websocket-server.php && \
    echo '<?php' >> websocket-server.php && \
    echo 'require_once __DIR__ . "/vendor/autoload.php";' >> websocket-server.php && \
    echo 'require_once __DIR__ . "/core/WebSocketServer.php";' >> websocket-server.php && \
    echo '$server = new \Core\WebSocketServer();' >> websocket-server.php && \
    echo '$server->start();' >> websocket-server.php && \
    chmod +x websocket-server.php

# Expose WebSocket port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start WebSocket server
CMD ["php", "websocket-server.php"]

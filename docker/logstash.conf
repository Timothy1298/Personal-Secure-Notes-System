input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json_lines
  }
  
  udp {
    port => 5000
    codec => json_lines
  }
}

filter {
  if [fields][service] == "personal-notes" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    if [level] == "ERROR" {
      mutate {
        add_tag => [ "error" ]
      }
    }
    
    if [level] == "WARN" {
      mutate {
        add_tag => [ "warning" ]
      }
    }
    
    if [message] =~ /API/ {
      mutate {
        add_tag => [ "api" ]
      }
    }
    
    if [message] =~ /Database/ {
      mutate {
        add_tag => [ "database" ]
      }
    }
    
    if [message] =~ /Authentication/ {
      mutate {
        add_tag => [ "auth" ]
      }
    }
  }
  
  if [fields][service] == "nginx" {
    grok {
      match => { "message" => "%{NGINXACCESS}" }
    }
    
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    
    if [response] >= 400 {
      mutate {
        add_tag => [ "error" ]
      }
    }
    
    if [response] >= 500 {
      mutate {
        add_tag => [ "server_error" ]
      }
    }
  }
  
  if [fields][service] == "mysql" {
    grok {
      match => { "message" => "%{MYSQL_LOG}" }
    }
    
    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "personal-notes-logs-%{+YYYY.MM.dd}"
  }
  
  if "error" in [tags] {
    email {
      to => "admin@personal-notes.com"
      subject => "Error Alert: %{message}"
      body => "Error occurred: %{message}"
    }
  }
}
